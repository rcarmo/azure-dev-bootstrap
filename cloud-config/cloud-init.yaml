#cloud-config

# **WARNING**: This is a template. Strings with ${AZURE_...}s and $AZURE_... will be replaced.

write_files:
  - path: /etc/ssh/sshd_config
    append: true
    content: |
      Port ${AZURE_SSH_PORT}
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

  - path: /etc/fail2ban/jail.d/defaults-debian.conf
    content: |
      [sshd]
      enabled = true
      port = ${AZURE_SSH_PORT}

  ##
  - path: /root/postflight.sh
    permissions: 0755
    content: |
      #!/bin/bash
      . /etc/environment
      echo "--> Removing snapd so it doesn't cause extra load on smaller VMs"
      apt-get purge -y snapd unattended-upgrades
      rm -rf /snap /var/snap /var/lib/snapd /var/log/unattended-upgrades
      echo "--> Package updates"
      apt-get update
      apt-get dist-upgrade -y
      apt-get autoremove -y

      echo "--> Setting up scratch"
      # Make sure we can write to the temporary SSD storage
      mkdir -p /mnt/scratch
      chmod a+w /mnt/scratch
      
      echo "--> Installing Tailscale"
      # Note: this is handy for easier remote access
      curl -fsSL https://tailscale.com/install.sh | sh
      tailscale up --authkey ${AZURE_TAILSCALE_AUTHKEY}

      echo "--> Installing Docker CE"
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      chmod a+r /etc/apt/keyrings/docker.gpg 
      echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      apt-get update
      apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      usermod -aG docker ${AZURE_ADMIN_USERNAME}

      # X11 setup (optional)
      #update-alternatives --set x-window-manager /usr/bin/xfwm4
      #update-alternatives --set x-default-session /usr/bin/xfce4-session
      #update-alternatives --set x-session-manager /usr/bin/xfce4-session
      #update-alternatives --install x-terminal-emulator /usr/bin/xfce4-terminal
      
      # Everything from here on down is run as a regular user
      
      sudo -i -u ${AZURE_ADMIN_USERNAME} bash << EOF
      cd
      echo "--> Setting up pyenv"
      git clone https://github.com/pyenv/pyenv.git ~/.pyenv

      echo "--> Setting up nodenv"
      git clone https://github.com/nodenv/nodenv.git ~/.nodenv
      mkdir -p ~/.nodenv/plugins
      git clone https://github.com/nodenv/node-build.git ~/.nodenv/plugins/node-build
      cat /tmp/.bashrc >> /home/${AZURE_ADMIN_USERNAME}/.bashrc
      EOF
      echo "==> Postflight done."

  # Add a .bashrc stub to /tmp
  # this is preferrable because if we try to add or append it directly 
  # via cloud-init then /etc/skel may not get copied over to the user home
  
  - path: /tmp/.bashrc
    permissions: 0755
    owner: ${AZURE_ADMIN_USERNAME}:${AZURE_ADMIN_USERNAME}
    content: |
      # bind pyenv to shell environment      
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
      
      # bind nodenv to shell environment
      export NODENV_ROOT="$HOME/.nodenv"
      export PATH="$NODENV_ROOT/bin:$PATH"
      eval "$(nodenv init -)"
      
      # Locally installed binaries (from system pip)
      export PATH="$HOME/.local/bin:$PATH"
            

  - path: /etc/waagent.conf
    permissions: 0444
    content: |
      ResourceDisk.Format=y
      ResourceDisk.Filesystem=ext4
      ResourceDisk.EnableSwap=y
      ResourceDisk.SwapSizeMB=2048

mounts:
  - - //${AZURE_STORAGE_ACCOUNT_NAME}.file.core.windows.net/${AZURE_SHARE_NAME}
    - /srv
    - cifs
    - vers=3.0,username=${AZURE_STORAGE_ACCOUNT_NAME},password=${AZURE_STORAGE_ACCOUNT_KEY},dir_mode=0770,file_mode=0660,uid=1000,gid=1000,noperm,noatime,mfsymlinks,iocharset=utf8

packages:
  # general
  - fail2ban
  - make
  - git
  - python3-dev
  - python3-pip
  - python3-venv
  - build-essential
  - golang
  # pyenv dependencies
  - libbz2-dev
  - libffi-dev
  - libreadline-dev
  - libsqlite3-dev
  - libssl-dev
  - lzma-dev
  - zlib1g-dev
  # CLI tools
  - net-tools
  - sqlite3
  - curl
  - htop
  - sudo
  - tmux
  - unzip
  - vim
  - wget
  - zsh
  # GUI (optional)
  #- xrdp
  #- xorgxrdp
  #- openssh-server
  #- fonts-inter
  #- fonts-firacode
  #- ttf-mscorefonts-installer
  #- xfce4
  #- xfce4-terminal
  #- xfce4-appmenu-plugin
  # Qt baseline (optional GUI add-on)
  #- qt5ct
  #- qutebrowser
  #- qt5-style-kvantum
  #- qt5-gtk-platformtheme
  #- qt6-gtk-platformtheme
  # Additions (optional)
  #- avahi-daemon
  #- weasyprint

runcmd:
  - /root/postflight.sh
  - reboot